<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="colorDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEACACoCwAAFgAAACgAAAAoAAAAUAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAkHO0ApEmjADRZ4QBgVeoAuXSiAHVp6ABMsSIAwIOiAIR45QBGmp0Axo+iAJGE4wDKmKEAfL1GAJyO
        4ADOoKEAjMFSAKWY3QDRp6EAmcRcANWtoACuoNoAo8djANezoACryWoAt6jXALPLcADauaAAuLqxAL6v
        0wC6zXUA3b6fAMHOegDfw58Ax9B+AM3RgwDhyJ4AzLzLANLThwDkzJ0A19SLANPDxwDc1Y4A5tCdANnI
        wQDh1pIA3s67AOrZmQDc48IA1uXKAM7m0QDH6NYAv+nbALbq4ACt6+QAAPL/AKTs6ACZ7ewAju7vAHLv
        9gBH8fwAX/D5AIHv8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8HARsvLyEBAS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDAEULy8vAQEhLy8v
        Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLxQBCi8vLwcBGy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8fAQEvLy8MARQvLy8vLy8vLy8vLy8vLy8vLy8vBgYTLy8vHgYGJi8vJwEBKy8vFAEKLy8v
        Ly8vLy8vLy8vLy8vLy8vLwYGBiovLx4GBhgvLy8BASEvLx8BAS8vLy8vLy8vLy8vLy8vLy8vLy8GBgYY
        Ly8YBgYGLS8vCgEXLy8nAQErLy8vLy8vLy8vLy8vLy8vLy8oBhMNBi0vEwYWBiAvLw8BDy8vLwEBIS8v
        Ly8vLy8vLy8vLy8vLy8vJgYTHgYiLxMGIgYNLy8XAQcvLy8KARcvLy8vLy8vLy8vLy8vLy8vLyYGEyoG
        EC8TBiYQBiYvIQEBIS8vCgEULy8vLy8vLy8vLy8vLy8vLy8mBhMvEwYoEwYmIAYWLysBAQEfHwEBFC8v
        Ly8vLy8vLy8vLy8vLy8vIwYTLyIGGhMGJioGBiovAQEEAQEBASQvLy8vLy8vLy8vLy8vLy8vLx4GEy8v
        Bg0TBi0vFgYeLwoBFBIBARcvLy8vLy8vLy8vLy8vLy8vLy8eBhMvLxoGBgYvLyIGDS8UAQwvLy8vLy8v
        Ly8vLy8vLy8vLy8vLy8vHgYTLy8qBgYGKQsCBgYjGwEHLy8vLy8vLy8vLy8vLy8vLy8vLy8vLx4GEy8v
        LxMGBgMAAAkGFiEBAS8vLy8vLy8vLy8vLy8vLy8vLy8vLy8WBhMvLy8vLyUAABEcBgYqAQEhLy8vLy8v
        Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8lAAAvLy8vLyEhKy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLAAALi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8AACUvLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vLzg8Nzc9ODAvLy8vCAAZLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzk3Nzc3Nzc9
        MC8vLw4ADi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy83Nz00MzU3Nz0vLy8ZAAgvLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8zNzc0Ly8vMjc3Ly8vJQAALy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vMDc3MS8vLy85
        Ny8vLy4AACwvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy83NzMvLy8vLy8vLwsAAAAAAAsvLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vOzc2Ly8vLy8vLy8VAAAAAAAFLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzo3Oi8vLy8v
        Ly8vLy8VAAsvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy82NzsvLy8vLy8vLy8vHQAFLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vMzc3Ly8vLy8vLy8vLyUAAC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzA3NzEvLy8v
        Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vNzc0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vLz43OS8vLy8zNzcvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy81NzcwLy8v
        NDc3Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzw3PTUzNTc3Ny8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vLy8yNzc3Nzc3NzgvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzA5PDc3
        PTUvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8v
        Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>